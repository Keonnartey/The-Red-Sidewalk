version: '3'
services:
  db:
    image: postgis/postgis:15-3.3
    container_name: redsidewalk-db
    environment:
      POSTGRES_USER: redsidewalk_user       # PostgreSQL username
      POSTGRES_PASSWORD: securepassword     # PostgreSQL password
      POSTGRES_DB: redsidewalk              # PostgreSQL database name
    ports:
      - "5432:5432"                         # Exposes port 5432 for local access
    volumes:
      - ./db:/docker-entrypoint-initdb.d 
      # Initializes DB with dump
      - postgres_data:/var/lib/postgresql/data
      # persistent volume after container stops


  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build: ./cryptid-sightings
    container_name: frontend
    ports:
      - "3000:3000"  # Next.js dev server
    volumes:
      - ./cryptid-sightings:/app  # Watch local files for hot reload
      - /app/node_modules # Avoid overwriting node_modules
    command: npm run dev
    depends_on:
      - backend

volumes:
  postgres_data:

  # web:
  #   build:
  #     context: ./backend
  #   container_name: redsidewalk-flask
  #   depends_on:
  #     - db
  #   ports:
  #     - "5000:5000"  # Exposes the Flask app on port 5000
  #   environment:
  #     - FLASK_APP=app.py
  #     - FLASK_ENV=development
  #     - DB_HOST=db
  #     - DB_PORT=5432
  #     - DB_NAME=redsidewalk
  #     - DB_USER=redsidewalk_user
  #     - DB_PASSWORD=securepassword
  #   volumes:
  #     - ./backend:/backend  # Mounts the current directory as a volume in the container

  #   command: flask run --host=0.0.0.0 --port=5000

